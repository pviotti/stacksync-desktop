/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stacksync.desktop.gui.settings;

import com.stacksync.desktop.Constants;
import com.stacksync.desktop.Environment;
import com.stacksync.desktop.config.Folder;
import com.stacksync.desktop.config.profile.Profile;
import com.stacksync.desktop.gui.error.ErrorMessage;
import com.stacksync.desktop.util.FileUtil;
import java.io.File;
import java.util.Locale;
import java.util.ResourceBundle;
import org.apache.log4j.Logger;

public class SimpleFolderSelectionPanel extends SettingsPanel {
    private final Logger logger = Logger.getLogger(SimpleFolderSelectionPanel.class.getName());
    private final Environment env = Environment.getInstance(); 
    /**
     * Creates new form SimpleFoldersTablePanel
     */
    public SimpleFolderSelectionPanel(Profile profile) {
        this.profile = profile;
        initComponents();
        
        lblFolderPath.setText(resourceBundle.getString("fpw_simple_folder_path"));
        btnBrowse.setText(resourceBundle.getString("fpw_simple_browse")); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFolderPath = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        txtFolderPath = new javax.swing.JTextField();

        lblFolderPath.setText("__Folder path:");
        lblFolderPath.setName("lblFolderPath"); // NOI18N

        btnBrowse.setText("__Browse");
        btnBrowse.setName("btnBrowse"); // NOI18N
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        txtFolderPath.setEditable(false);
        txtFolderPath.setName("txtFolderPath"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblFolderPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFolderPath, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowse)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBrowse)
                    .addComponent(lblFolderPath)
                    .addComponent(txtFolderPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(245, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        
        File file = FileUtil.showBrowseDirectoryDialog();
        if (file != null && !file.getPath().equals("")) {
            this.txtFolderPath.setText(file.getAbsolutePath());
            
            Folder folder = profile.getFolder();
            folder.setLocalFile(file);
            profile.setFolder(folder);
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JLabel lblFolderPath;
    private javax.swing.JTextField txtFolderPath;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clean() {
        //profile.getFolders().clear();  
    }

    @Override
    public void load() {

        Folder folder = new Folder(profile);
        folder.setLocalFile(new File(env.getDefaultUserHome() + "Downloads/stacksync"));

        profile.setFolder(folder);
        txtFolderPath.setText(env.getDefaultUserHome() + "Downloads/stacksync");
    }

    @Override
    public void save() {
        
        Folder folder = profile.getFolder();
        
        if (folder == null) {
            return;
        }
        
        if(!folder.getLocalFile().exists()){
            folder.getLocalFile().mkdirs();

            // Creates a folderLink in favorites
            if(env.getOperatingSystem() == Environment.OperatingSystem.Windows){
                File file = new File(env.getDefaultUserHome() + "Links");
                if(file.exists()){
                    FileUtil.createWindowsLink(env.getDefaultUserHome() + "Links\\Stacksync.lnk", folder.getLocalFile().getPath());
                }

                Locale locale = new Locale("en", "US");        
                Locale defaultLocale = Locale.getDefault();
                if(defaultLocale.getLanguage().toLowerCase().compareTo("es") == 0){
                    locale = new Locale("es", "ES");
                } else if(defaultLocale.getLanguage().toLowerCase().compareTo("fr") == 0){
                    locale = new Locale("fr", "FR");
                }

                ResourceBundle resourceBundletmp = ResourceBundle.getBundle(Constants.RESOURCE_BUNDLE, locale);                    
                String desktopDirectory = resourceBundletmp.getString("desktop_directory");

                file = new File(env.getDefaultUserHome() + desktopDirectory);
                if(file.exists()){
                    FileUtil.createWindowsLink(env.getDefaultUserHome() + desktopDirectory + "\\Stacksync.lnk", folder.getLocalFile().getPath());
                }
            }
        }
    
        
    }

    @Override
    public boolean check() {
        boolean check = false;
        
        Folder folder = profile.getFolder();
        
        if (folder != null) {
            if(folder.isActive()){
                if(folder.getLocalFile() != null && folder.getLocalFile().getPath().length() > 0){
                    check = true;
                }
            }
        }
        
        if(!check){
            ErrorMessage.showMessage(this, "Error", "You need to configurate a folder to sincronize.");
        }
        
        return check;
    }
}
